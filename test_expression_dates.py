import unittest
from Expression.expression_dates import Expression_Dates
import z_test_data

class testExpressionDates(unittest.TestCase):

    def setUp(self):
        self.PDF_Info = z_test_data.PDF_Info
        self.supporting_data = []
        self.attributes = []
        self.x = Expression_Dates(self.PDF_Info, self.supporting_data, self.attributes)

    def test_search_date_pdf_info(self):
        l_date = ['February 20, 2020']
        out_put = self.x.search_date_pdf_info(l_date)
        self.assertEqual(out_put, {'February 20, 2020': [[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]]})
        
        # multiple dates
        l_date = ['February 20, 2020', 'February 29']
        out_put = self.x.search_date_pdf_info(l_date)
        self.assertEqual(out_put, {'February 20, 2020': [[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]], 'February 29': [[[5, 1, 16, 1, 5, 4, 1957, 4628, 243, 62, 91, 'February', 0], [5, 1, 16, 1, 5, 5, 2219, 4629, 79, 57, 86, '29', 0]]]})
        # empty list
        l_date = []
        out_put = self.x.search_date_pdf_info(l_date)
        self.assertEqual(out_put, {})
        # no match
        l_date = ['February 20, 2020', 'February 30']
        out_put = self.x.search_date_pdf_info(l_date)
        self.assertEqual(out_put, {'February 20, 2020': [[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]], 'February 30': []})

        # print(out_put)

    
    def test_search_dates_pdf_info(self):
        out_put = self.x.search_dates_pdf_info()
        self.assertEqual(out_put, {'February 20, 2020': [[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]], 'February 29': [[[5, 1, 16, 1, 5, 4, 1957, 4628, 243, 62, 91, 'February', 0], [5, 1, 16, 1, 5, 5, 2219, 4629, 79, 57, 86, '29', 0]]], '2/20/2020': [[[5, 1, 18, 1, 1, 3, 3539, 5420, 333, 59, 96, '2/20/2020', 0]], [[5, 1, 10, 1, 1, 3, 3539, 105420, 333, 59, 96, '2/20/2020', 0]]]})


    
    def test_strip_details(self):
        dates = {'February 20, 2020': [[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]], 'February 29': [[[5, 1, 16, 1, 5, 4, 1957, 4628, 243, 62, 91, 'February', 0], [5, 1, 16, 1, 5, 5, 2219, 4629, 79, 57, 86, '29', 0]]], '2/20/2020': [[[5, 1, 18, 1, 1, 3, 3539, 5420, 333, 59, 96, '2/20/2020', 0]], [[5, 1, 10, 1, 1, 3, 3539, 105420, 333, 59, 96, '2/20/2020', 0]]]}
        out_put = self.x.strip_details(dates)
        self.assertEqual(out_put, [['February 20, 2020', [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]]], ['February 20, 2020', [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]], ['February 29', [[5, 1, 16, 1, 5, 4, 1957, 4628, 243, 62, 91, 'February', 0], [5, 1, 16, 1, 5, 5, 2219, 4629, 79, 57, 86, '29', 0]]], ['2/20/2020', [[5, 1, 18, 1, 1, 3, 3539, 5420, 333, 59, 96, '2/20/2020', 0]]], ['2/20/2020', [[5, 1, 10, 1, 1, 3, 3539, 105420, 333, 59, 96, '2/20/2020', 0]]]])
        
        # single entry
        dates = {'February 20, 2020': [[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]]}
        out_put = self.x.strip_details(dates)
        self.assertEqual(out_put, [['February 20, 2020', [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]]], ['February 20, 2020', [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]]])
        
        # single entry in single entry
        dates = {'February 20, 2020': [[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]]]}
        out_put = self.x.strip_details(dates)
        self.assertEqual(out_put, [['February 20, 2020', [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]]]])

        # empty list
        dates = {}
        out_put = self.x.strip_details(dates)
        self.assertEqual(out_put, [])
       
        

    def test_date_expression(self):
        l_date = [['February 20, 2020', [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]]], ['February 20, 2020', [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]], ['February 29', [[5, 1, 16, 1, 5, 4, 1957, 4628, 243, 62, 91, 'February', 0], [5, 1, 16, 1, 5, 5, 2219, 4629, 79, 57, 86, '29', 0]]], ['2/20/2020', [[5, 1, 18, 1, 1, 3, 3539, 5420, 333, 59, 96, '2/20/2020', 0]]], ['2/20/2020', [[5, 1, 10, 1, 1, 3, 3539, 105420, 333, 59, 96, '2/20/2020', 0]]]]
        l_keywords = ['Issued on',[[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]]
        out_put = self.x.date_expression(l_keywords, l_date)
        self.assertEqual(out_put, [['Issued on', 'February 20, 2020', [[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 477)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 907)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]]]], [[5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 375)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 805)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]]]]], {'right': 8, 'down': 0, 'equal': 0}, {'min': 375, 'max': 907}, [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]])

        # no align
        l_date = [['February 20, 2020', [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]], ['February 29', [[5, 1, 16, 1, 5, 4, 1957, 4628, 243, 62, 91, 'February', 0], [5, 1, 16, 1, 5, 5, 2219, 4629, 79, 57, 86, '29', 0]]], ['2/20/2020', [[5, 1, 18, 1, 1, 3, 3539, 5420, 333, 59, 96, '2/20/2020', 0]]], ['2/20/2020', [[5, 1, 10, 1, 1, 3, 3539, 105420, 333, 59, 96, '2/20/2020', 0]]]]
        l_keywords = ['Issued on',[[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]]
        out_put = self.x.date_expression(l_keywords, l_date)
        self.assertEqual(out_put, [])

        # one term align only
        l_date = [['February 20, 2020', [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 14042, 9703, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 14402, 9073, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 10564, 9073, 157, 53, 95, '2020', 0]]], ['February 20, 2020', [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]], ['February 29', [[5, 1, 16, 1, 5, 4, 1957, 4628, 243, 62, 91, 'February', 0], [5, 1, 16, 1, 5, 5, 2219, 4629, 79, 57, 86, '29', 0]]], ['2/20/2020', [[5, 1, 18, 1, 1, 3, 3539, 5420, 333, 59, 96, '2/20/2020', 0]]], ['2/20/2020', [[5, 1, 10, 1, 1, 3, 3539, 105420, 333, 59, 96, '2/20/2020', 0]]]]
        l_keywords = ['Issued on',[[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]]
        out_put = self.x.date_expression(l_keywords, l_date)
        self.assertEqual(out_put, [['Issued on', 'February 20, 2020', [[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 477)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]]]], [[5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 375)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]]]]], {'right': 2, 'down': 0, 'equal': 0}, {'min': 375, 'max': 477}, [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 14042, 9703, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 14402, 9073, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 10564, 9073, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]])

        # empty date list
        l_date = []
        l_keywords = ['Issued on',[[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]]
        out_put = self.x.date_expression(l_keywords, l_date)
        self.assertEqual(out_put, [])

        # empty keyword
        l_date = [['February 20, 2020', [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]]], ['February 20, 2020', [[5, 1, 4, 1, 2, 4, 1179, 1056, 285, 67, 95, 'February', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, '20', 0], [5, 1, 4, 1, 2, 5, 1487, 1056, 93, 62, 94, ',', 1], [5, 1, 4, 1, 2, 6, 1609, 1056, 156, 53, 95, '2020', 0]]], ['February 29', [[5, 1, 16, 1, 5, 4, 1957, 4628, 243, 62, 91, 'February', 0], [5, 1, 16, 1, 5, 5, 2219, 4629, 79, 57, 86, '29', 0]]], ['2/20/2020', [[5, 1, 18, 1, 1, 3, 3539, 5420, 333, 59, 96, '2/20/2020', 0]]], ['2/20/2020', [[5, 1, 10, 1, 1, 3, 3539, 105420, 333, 59, 96, '2/20/2020', 0]]]]
        l_keywords = []
        out_put = self.x.date_expression(l_keywords, l_date)
        self.assertEqual(out_put, [])


    def test_extract_date_expression(self):
        p_date_dtls = [['Issued on', 'February 20, 2020', [[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 477)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 907)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]]]], [[5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 375)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 805)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]]]]], {'right': 8, 'down': 0, 'equal': 0}, {'min': 375, 'max': 907}, [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]]
        out_put = self.x.extract_date_expression(p_date_dtls)
        self.assertEqual(out_put, [['Issued on', 'February 20, 2020', [[[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 477)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 907)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]]]], [[5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 375)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 805)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]]]]], {'right': 8, 'down': 0, 'equal': 0}, {'min': 375, 'max': 907}, [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]]])


        # 2 terms match
        p_date_dtls = [['Issued on', 'February 20, 2020', [[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 477)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 907)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]]]], [[5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 375)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 805)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]]]]], {'right': 8, 'down': 0, 'equal': 0}, {'min': 375, 'max': 907}, [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]], ['Issued on', 'February 20, 2020', [[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 477)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 907)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]]]], [[5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 375)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 805)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]]]]], {'right': 8, 'down': 0, 'equal': 0}, {'min': 375, 'max': 907}, [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]]
        out_put = self.x.extract_date_expression(p_date_dtls)
        self.assertEqual(out_put, [['Issued on', 'February 20, 2020', [[[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 477)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 907)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]]]], [[5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 375)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 805)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]]]]], {'right': 8, 'down': 0, 'equal': 0}, {'min': 375, 'max': 907}, [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]], ['Issued on', 'February 20, 2020', [[[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 477)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 907)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]]]], [[5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 375)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 805)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]]]]], {'right': 8, 'down': 0, 'equal': 0}, {'min': 375, 'max': 907}, [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]]])

        # empty
        p_date_dtls = []
        out_put = self.x.extract_date_expression(p_date_dtls)
        self.assertEqual(out_put,[])

     
    def test_get(self):
        l_keywords = ['Issued on',[[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]]
        out_put = self.x.get(l_keywords)
        self.assertEqual(out_put, [['Issued on', 'February 20, 2020', [[[[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 477)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 785)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 907)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 129)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 129)]]]]], [[5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0], [[[[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], ('right', 375)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], ('right', 683)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]], [[[5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0], ('right', 805)], [[[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, 'thursday', 0], ('right', 27)], [[5, 1, 4, 1, 1, 3, 786, 973, 316, 67, 95, ',', 1], ('right', 27)]]]]]], {'right': 8, 'down': 0, 'equal': 0}, {'min': 375, 'max': 907}, [[5, 1, 4, 1, 1, 4, 1134, 973, 286, 67, 95, 'February', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, '20', 0], [5, 1, 4, 1, 1, 5, 1442, 973, 94, 62, 95, ',', 1], [5, 1, 4, 1, 1, 6, 1564, 973, 157, 53, 95, '2020', 0]], [[5, 1, 4, 1, 1, 1, 454, 973, 203, 53, 95, 'Issued', 0], [5, 1, 4, 1, 1, 2, 685, 986, 74, 40, 96, 'on', 0]]]]])
        


if __name__ == "__main__":
    unittest.main()

    # TED = testExpressionDates()
    # TED.setUp()
    # TED.test_get()
    